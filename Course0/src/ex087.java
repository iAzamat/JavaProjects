/*
Округление
Класс Math содержит несколько удобных методов для округления чисел.

    Math.round(x) - принимает число x типа double и округляет его до ближайшего целого
по правилам математического округления. Возвращает целое число типа int.

double x = 25.364789;
System.out.println(Math.round(x));    // 25

    Math.ceil(x) - принимает число x типа double и округляет его до ближайшего большего целого,
т.е., в сторону плюс-бесконечности. Возвращает число типа double.

double x1 = 25.364789;
System.out.println(Math.ceil(x1));    // 26.0

double x2 = -25.364789;
System.out.println(Math.ceil(x2));    // -25.0

    Math.floor(x) - принимает число x типа double и округляет его до ближайшего меньшего целого,
т.е., в сторону минус-бесконечности. Возвращает число типа double.

double x1 = 25.364789;
System.out.println(Math.floor(x1));    // 25.0

double x2 = -25.364789;
System.out.println(Math.floor(x2));    // -26.0

Обратите внимание на различие результатов при работе с положительными и отрицательными числами.
К сожалению, эти функции не дают прямой возможности округлять числа до нужного числа десятичных знаков.
Поэтому приходится использовать дополнительные вычисления.
Округлим число x до трёх знаков после запятой:

double x = 25.364789;
int n = 3;     // количество знаков после запятой
double scale = Math.pow(10, n);
System.out.println(Math.round(x * scale) / scale);    // 25.365

Следует иметь в виду, что такой способ имеет низкую точность из-за погрешностей
хранения в памяти компьютера чисел типа double.
Однако, для работы с несколькими знаками после запятой этого вполне достаточно.

Если нужно просто вывести число с определённым количеством знаков после запятой,
можно использовать для этого форматирование строк:

double x = 25.364789;
String formatted = String.format("%.3f", x);
System.out.println(formatted);    // 25.365

В этом примере мы пользуемся методом format() класса String.
В качестве аргументов этот метод получает формат числа -
количество знаков после запятой (.3 - три знака),
тип числа (f - число с плавающей точкой) и само число, которое нужно округлить.

 */

/*
Дано число 0 <= n <= 10.
Выведите число π с точностью n знаков после запятой.
Воспользуйтесь константой PI из класса Math.

Sample Input:
3

Sample Output:
3.142

 */

import java.util.Scanner;

public class ex087 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        double PI = Math.PI;
        double scale = Math.pow(10, N);
        if (N > 0 && N <= 10) {
            System.out.println(Math.round(PI * scale) / scale);
        }
        if (N == 0) {
            System.out.println(Math.round(PI));
        }
    }
}
